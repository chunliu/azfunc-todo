{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "sqlServerName": {
            "type": "string",
            "metadata": {
                "description": "The name of the sql server instance"
            }
        },
        "sqlAdmin": {
            "type": "string",
            "metadata": {
                "description": "The name of the administrator login"
            }
        },
        "sqlAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password of the administrator login"
            }
        },
        "functionAppName": {
            "type": "string",
            "metadata": {
                "description": "The name of the function app"
            }
        },
        "apimPublisherEmail": {
            "type": "string",
            "metadata": {
                "description": "The email address of APIM publisher"
            }
        },
        "apimPublisherName": {
            "type": "string",
            "metadata": {
                "description": "The name of APIM publisher"
            }
        }
    },
    "functions": [],
    "variables": {
        "vnetName": "[concat(resourceGroup().name, '-vnet')]",
        "appServicePlanName": "[concat(parameters('functionAppName'), '-svcplan')]",
        "funcAppStorage": "[concat(parameters('functionAppName'), 'storage')]",
        "appInsightName": "[concat(resourceGroup().name, '-appinsights')]",
        "apimName": "[concat('apiminst', take(uniqueString(resourceGroup().id), 4))]",
        "funcAppKeyName": "[concat(parameters('functionAppName'), '-key')]"
    },
    "resources": [
        {
            "name": "[variables('vnetName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-11-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "[variables('vnetName')]"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.1.0.0/20"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "10.1.0.0/24",
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.Web",
                                    "locations": ["*"]
                                }
                            ],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "function-subnet",
                        "properties": {
                            "addressPrefix": "10.1.1.0/24",
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.Sql",
                                    "locations": [
                                        "[resourceGroup().location]"
                                    ]
                                }
                            ],
                            "delegations": [
                                {
                                    "name": "delegation",
                                    "properties": {
                                        "serviceName": "Microsoft.Web/serverfarms"
                                    }
                                }
                            ],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ]
            }
        },
        {
            "name": "[parameters('sqlServerName')]",
            "type": "Microsoft.Sql/servers",
            "apiVersion": "2019-06-01-preview",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "[parameters('sqlServerName')]"
            },
            "properties": {
                "administratorLogin": "[parameters('sqlAdmin')]",
                "administratorLoginPassword": "[parameters('sqlAdminPassword')]",
                "version": "12.0",
                "publicNetworkAccess": "Enabled"
            },
            "resources": [
                {
                    "type": "Microsoft.Sql/servers/virtualNetworkRules",
                    "apiVersion": "2015-05-01-preview",
                    "name": "[concat(parameters('sqlServerName'), '/FunctionApp')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Sql/servers', parameters('sqlServerName'))]",
                        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
                    ],
                    "properties": {
                        "virtualNetworkSubnetId": "[concat(resourceId('Microsoft.Network/virtualNetworks',variables('vnetName')), '/subnets/function-subnet')]",
                        "ignoreMissingVnetServiceEndpoint": false
                    }
                }
            ]
        },
        {
            "name": "[concat(parameters('sqlServerName'), '/tododb')]",
            "type": "Microsoft.Sql/servers/databases",
            "apiVersion": "2019-06-01-preview",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "sqlDatabase1"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('sqlServerName'))]"
            ],
            "sku": {
                "name": "GP_S_Gen5",
                "tier": "GeneralPurpose",
                "family": "Gen5",
                "capacity": 2
            },
            "kind": "v12.0,user,vcore,serverless",
            "properties": {
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "maxSizeBytes": 34359738368,
                "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
                "zoneRedundant": false,
                "readScale": "Disabled",
                "readReplicaCount": 0,
                "autoPauseDelay": 60,
                "storageAccountType": "GRS",
                "minCapacity": 1
            }
        },
        {
            "name": "[variables('funcAppStorage')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "tags": {
                "displayName": "[variables('funcAppStorage')]"
            },
            "location": "[resourceGroup().location]",
            "kind": "StorageV2",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            }
        },
        {
            "type": "Microsoft.Insights/components",
            "apiVersion": "2015-05-01",
            "name": "[variables('appInsightName')]",
            "location": "[resourceGroup().location]",
            "kind": "web",
            "tags": {
                "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('functionAppName'))]": "Resource"
            },
            "properties": {
                "Application_Type": "web"
            }
        },        
        {
            "name": "[variables('appServicePlanName')]",
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-02-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "P1",
                "tier": "Premium",
                "capacity": 1
            },
            "kind": "linux",
            "tags": {
                "displayName": "[variables('appServicePlanName')]"
            },
            "properties": {
                "maximumElasticWorkerCount": 1
            }
        },
        {
            "name": "[parameters('functionAppName')]",
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "location": "[resourceGroup().location]",
            "kind": "functionapp,linux",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('funcAppStorage'))]",
                "[resourceId('Microsoft.Insights/components', variables('appInsightName'))]"
            ],
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('funcAppStorage'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('funcAppStorage')),'2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~3"
                        },
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(resourceId('microsoft.insights/components/', variables('appInsightName')), '2015-05-01').InstrumentationKey]"
                        },
                        {
                            "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                            "value": "[concat('InstrumentationKey=', reference(resourceId('microsoft.insights/components/', variables('appInsightName')), '2015-05-01').InstrumentationKey)]"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "dotnet"
                        },
                        {
                            "name": "PROJECT",
                            "value": "src"
                        }
                    ],
                    "connectionStrings": [
                        {
                            "name": "SQLConnectionString",
                            "connectionString": "[concat('Server=tcp:',reference(resourceId('Microsoft.Sql/servers',parameters('sqlServerName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=tododb;Persist Security Info=False;User ID=', parameters('sqlAdmin'), ';Password=', parameters('sqlAdminPassword'),';MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]",
                            "type": "SQLAzure"
                        }
                    ],
                    "ipSecurityRestrictions": [
                        {
                            "vnetSubnetResourceId": "[concat(resourceId('Microsoft.Network/virtualNetworks',variables('vnetName')), '/subnets/default')]",
                            "action": "Allow",
                            "tag": "Default",
                            "priority": 100,
                            "name": "vnet access"
                        },
                        {
                            "ipAddress": "Any",
                            "action": "Deny",
                            "priority": 2147483647,
                            "name": "Deny all",
                            "description": "Deny all access"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "type": "config",
                    "apiVersion": "2018-02-01",
                    "name": "virtualNetwork",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]",
                        "[resourceId('Microsoft.Network/virtualNetworks',variables('vnetName'))]"
                    ],
                    "properties": {
                        "subnetResourceId": "[concat(resourceId('Microsoft.Network/virtualNetworks',variables('vnetName')), '/subnets/function-subnet')]",
                        "swiftSupported": true
                    }
                },
                {
                    "type": "sourcecontrols",
                    "apiVersion": "2018-11-01",
                    "name": "web",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
                    ],
                    "properties": {
                        "repoUrl": "https://github.com/chunliu/azfunc-todo.git",
                        "branch": "master",
                        "isManualIntegration": true,
                        "publishRunbook": true
                    }
                }
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service",
            "apiVersion": "2019-12-01",
            "name": "[variables('apimName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Developer",
                "capacity": 1
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
            ],
            "properties": {
                "publisherEmail": "[parameters('apimPublisherEmail')]",
                "publisherName": "[parameters('apimPublisherName')]",
                "virtualNetworkType": "External",
                "virtualNetworkConfiguration": {
                    "subnetResourceId": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('vnetName')), '/subnets/default')]"
                }
            },
            "resources": [
                {
                    "type": "Microsoft.ApiManagement/service/namedValues",
                    "apiVersion": "2019-12-01",
                    "name": "[concat(variables('apimName'), '/', variables('funcAppKeyName'))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.ApiManagement/service', variables('apimName'))]",
                        "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
                    ],
                    "properties": {
                        "displayName": "[variables('funcAppKeyName')]",
                        "value": "[listKeys(concat(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '/host/default'), '2019-08-01').functionKeys.default]",
                        "secret": true
                    }
                },
                {
                    "type": "Microsoft.ApiManagement/service/backends",
                    "apiVersion": "2019-12-01",
                    "name": "[concat(variables('apimName'), '/', parameters('functionAppName'))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.ApiManagement/service', variables('apimName'))]",
                        "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]",
                        "[resourceId('Microsoft.ApiManagement/service/namedValues', variables('apimName'), variables('funcAppKeyName'))]"
                    ],
                    "properties": {
                        "protocol": "http",
                        "url": "[concat('https://', parameters('functionAppName'), '.azurewebsites.net/api')]",
                        "resourceId": "[concat('https://management.azure.com', resourceId('Microsoft.Web/sites', parameters('functionAppName')))]",
                        "credentials": {
                            "header": {
                                "x-functions-key": [
                                    "[concat('{{', variables('funcAppKeyName'), '}}')]"
                                ]
                            }
                        }
                    }
                },
                {
                    "type": "Microsoft.ApiManagement/service/apis",
                    "apiVersion": "2019-12-01",
                    "name": "[concat(variables('apimName'), '/todo-function-app')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.ApiManagement/service', variables('apimName'))]"
                    ],
                    "properties": {
                        "displayName": "Todo Function App",
                        "path": "funcapp",
                        "protocols": [
                            "https"
                        ]
                    },
                    "resources": [
                        {
                            "type": "Microsoft.ApiManagement/service/apis/policies",
                            "apiVersion": "2019-12-01",
                            "name": "[concat(variables('apimName'), '/todo-function-app/policy')]",
                            "dependsOn":[
                                "[resourceId('Microsoft.ApiManagement/service/apis', variables('apimName'), 'todo-function-app')]",
                                "[resourceId('Microsoft.ApiManagement/service', variables('apimName'))]",
                                "[resourceId('Microsoft.ApiManagement/service/backends', variables('apimName'), parameters('functionAppName'))]"
                            ],
                            "properties": {
                                "value": "[concat('<policies>\r\n<inbound>\r\n<base />\r\n<set-backend-service id=\"funcapp-policy\" backend-id=\"', parameters('functionAppName'), '\" />\r\n</inbound>\r\n<backend>\r\n<base />\r\n</backend>\r\n<outbound>\r\n<base />\r\n</outbound>\r\n<on-error>\r\n<base />\r\n</on-error>\r\n</policies>')]",
                                "format": "xml"
                            }
                        },
                        {
                            "type": "Microsoft.ApiManagement/service/apis/operations",
                            "apiVersion": "2019-12-01",
                            "name": "[concat(variables('apimName'), '/todo-function-app/get-todofunc-gettodos')]",
                            "dependsOn": [
                                "[resourceId('Microsoft.ApiManagement/service', variables('apimName'))]",
                                "[resourceId('Microsoft.ApiManagement/service/apis', variables('apimName'), 'todo-function-app')]"
                            ],
                            "properties": {
                                "displayName": "TodoFunc_GetTodos",
                                "method": "GET",
                                "urlTemplate": "/todo"
                            }
                        },
                        {
                            "type": "Microsoft.ApiManagement/service/apis/operations",
                            "apiVersion": "2019-12-01",
                            "name": "[concat(variables('apimName'), '/todo-function-app/get-todofunc-gettodobyid')]",
                            "dependsOn": [
                                "[resourceId('Microsoft.ApiManagement/service', variables('apimName'))]",
                                "[resourceId('Microsoft.ApiManagement/service/apis', variables('apimName'), 'todo-function-app')]"
                            ],
                            "properties": {
                                "displayName": "TodoFunc_GetTodoById",
                                "method": "GET",
                                "urlTemplate": "/todo/{id}",
                                "templateParameters": [
                                    {
                                        "name": "id",
                                        "required": true,
                                        "type": "integer"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.ApiManagement/service/apis/operations",
                            "apiVersion": "2019-12-01",
                            "name": "[concat(variables('apimName'), '/todo-function-app/get-todofunc-create')]",
                            "dependsOn": [
                                "[resourceId('Microsoft.ApiManagement/service', variables('apimName'))]",
                                "[resourceId('Microsoft.ApiManagement/service/apis', variables('apimName'), 'todo-function-app')]"
                            ],
                            "properties": {
                                "displayName": "TodoFunc_Create",
                                "method": "POST",
                                "urlTemplate": "/todo"
                            }
                        },
                        {
                            "type": "Microsoft.ApiManagement/service/apis/operations",
                            "apiVersion": "2019-12-01",
                            "name": "[concat(variables('apimName'), '/todo-function-app/get-todofunc-update')]",
                            "dependsOn": [
                                "[resourceId('Microsoft.ApiManagement/service', variables('apimName'))]",
                                "[resourceId('Microsoft.ApiManagement/service/apis', variables('apimName'), 'todo-function-app')]"
                            ],
                            "properties": {
                                "displayName": "TodoFunc_Update",
                                "method": "PUT",
                                "urlTemplate": "/todo/{id}",
                                "templateParameters": [
                                    {
                                        "name": "id",
                                        "required": true,
                                        "type": "integer"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.ApiManagement/service/apis/operations",
                            "apiVersion": "2019-12-01",
                            "name": "[concat(variables('apimName'), '/todo-function-app/get-todofunc-delete')]",
                            "dependsOn": [
                                "[resourceId('Microsoft.ApiManagement/service', variables('apimName'))]",
                                "[resourceId('Microsoft.ApiManagement/service/apis', variables('apimName'), 'todo-function-app')]"
                            ],
                            "properties": {
                                "displayName": "TodoFunc_Delete",
                                "method": "DELETE",
                                "urlTemplate": "/todo/{id}",
                                "templateParameters": [
                                    {
                                        "name": "id",
                                        "required": true,
                                        "type": "integer"
                                    }
                                ]
                            }
                        }                                                                                            
                    ]
                }
            ]
        }
    ],
    "outputs": {}
}